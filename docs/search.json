[{"path":"https://receptiviti.github.io/receptiviti-r/articles/high_volume.html","id":"cache-as-output","dir":"Articles","previous_headings":"","what":"Cache as Output","title":"High Volume","text":"Setting collect_results argument False avoids retaining batch results memory receive, means results returned, collected cache. texts also big load memory, can loaded files request time. default, multiple files pointed text, actual texts loaded sent scoring, means bundle_size * cores texts loaded time. can start writing small text examples files: minimally load results saving results Parquet dataset. Disabling request_cache also avoid storing copy raw results. Results now available cache directory, can load using request function :","code":"base_dir <- \"../../\" text_dir <- paste0(base_dir, \"test_texts/\") dir.create(text_dir, FALSE, TRUE)  for (i in seq_len(10)) {   writeLines(     paste0(\"An example text \", i, \".\"),     paste0(text_dir, \"example_\", i, \".txt\")   ) } library(receptiviti)  db_dir <- paste0(base_dir, \"test_results\") dir.create(db_dir, FALSE, TRUE)  receptiviti(   dir = text_dir, collect_results = FALSE, cache = db_dir,   request_cache = FALSE, cores = 1 ) # adding make_request=False just ensures requests are not made if not found results <- receptiviti(dir = text_dir, cache = db_dir, make_request = FALSE) results[, 2:4] #>                           text_hash summary.word_count #> 1  4ab51432a48a54d4fd780d226d0c3f1c                  4 #> 2  4845354bad8717fcd19ca95313715734                  4 #> 3  786744d45ec2d0e302394dc2ececa004                  4 #> 4  bb2ced7fa2cf67ec2aa974bac3cfb609                  4 #> 5  507616854eb89e3d12e49001fe4333c8                  4 #> 6  b80b47a8f2def76f4c256108053dda50                  4 #> 7  3c3d708014a7c25ee468afbd32843dab                  4 #> 8  fbc965c3d7b8cb1f487789bb9a313efa                  4 #> 9  11fa50aa3392a971cb0dc098d8efc5a4                  4 #> 10 72c5453f604e9493e3d7619542272068                  4 #>    summary.words_per_sentence #> 1                           4 #> 2                           4 #> 3                           4 #> 4                           4 #> 5                           4 #> 6                           4 #> 7                           4 #> 8                           4 #> 9                           4 #> 10                          4"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/high_volume.html","id":"manual-chunking","dir":"Articles","previous_headings":"","what":"Manual Chunking","title":"High Volume","text":"flexible approach process smaller chunks text normally, handle loading storing results . case, may best disable parallelization (’re parallelizing manually), explicitly disable primary cache (case ’s specified environment variable). Now results stored smaller files:","code":"res_dir <- paste0(base_dir, \"text_results_manual\") dir.create(res_dir, FALSE, TRUE)  # using the same files as before files <- list.files(text_dir, full.names = TRUE)  # process 5 files at a time for (i in seq(1, 10, 5)) {   file_subset <- files[seq(i, i + 4)]   results <- receptiviti(     files = file_subset, id = file_subset,     cores = 1, cache = FALSE, request_cache = FALSE   )   vroom::vroom_write(     results, paste0(res_dir, \"/files_\", i, \"-\", i + 5, \".csv.xz\"), \",\"   ) } vroom::vroom(paste0(res_dir, \"/files_1-6.csv.xz\")) #> Rows: 5 Columns: 1569 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr    (4): id, text_hash, interpersonal_circumplex.category, interpersonal_... #> dbl (1565): summary.word_count, summary.words_per_sentence, summary.sentence... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 5 × 1,569 #>   id                         text_hash summary.word_count summary.words_per_se…¹ #>   <chr>                      <chr>                  <dbl>                  <dbl> #> 1 ../../test_texts/example_… 4ab51432…                  4                      4 #> 2 ../../test_texts/example_… 4845354b…                  4                      4 #> 3 ../../test_texts/example_… 786744d4…                  4                      4 #> 4 ../../test_texts/example_… bb2ced7f…                  4                      4 #> 5 ../../test_texts/example_… 50761685…                  4                      4 #> # ℹ abbreviated name: ¹​summary.words_per_sentence #> # ℹ 1,565 more variables: summary.sentence_count <dbl>, #> #   summary.six_plus_words <dbl>, summary.capitals <dbl>, summary.emojis <dbl>, #> #   summary.emoticons <dbl>, summary.hashtags <dbl>, summary.urls <dbl>, #> #   personality.extraversion <dbl>, personality.active <dbl>, #> #   personality.assertive <dbl>, personality.cheerful <dbl>, #> #   personality.energetic <dbl>, personality.friendly <dbl>, …"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"install-and-load","dir":"Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"set-up-api-credentials","dir":"Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"permanent","dir":"Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"temporary","dir":"Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"confirm-credentials","dir":"Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair. This call will not count towards your plan."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"loaded-text","dir":"Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"text-in-files","dir":"Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(files = c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   files = c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(dir = \"../files\") results <- receptiviti(   dir = \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"returned-results","dir":"Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score acab8277267d0efee0828f94e0919ddf                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 acab8277267d0efee0828f94e0919ddf                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 acab8277267d0efee0828f94e0919ddf                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 acab8277267d0efee0828f94e0919ddf     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"aligning-results","dir":"Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 42ff59040f004970040f90a19aa6b3fa                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  b 4db2bfd2c8140dffac0060c9fb1c6d6f                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 42ff59040f004970040f90a19aa6b3fa                  2 #> 2    a a2 42ff59040f004970040f90a19aa6b3fa                  2 #> 3    b b1 4db2bfd2c8140dffac0060c9fb1c6d6f                  2 #> 4    b b2 4db2bfd2c8140dffac0060c9fb1c6d6f                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"saved-results","dir":"Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 85% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"preserving-results","dir":"Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/articles/receptiviti.html","id":"handling-big-data","dir":"Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousands texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) enable primary cache (avoid attempting read cache written another instance). using primary cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/index.html","id":"receptiviti","dir":"","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API. Python package also available Receptiviti/receptiviti-python.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.8) Development (version 0.1.9) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Optionally builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/index.html","id":"api-access","dir":"","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":null,"dir":"Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text = NULL, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, files = NULL, dir = NULL, file_type = \"txt\",   encoding = NULL, return_text = FALSE, context = \"written\",   custom_context = FALSE, api_args = getOption(\"receptiviti.api_args\",   list()), frameworks = getOption(\"receptiviti.frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   bundle_byte_limit = 7500000, collapse_lines = FALSE, retry_limit = 50,   clear_cache = FALSE, clear_scratch_cache = TRUE, request_cache = TRUE,   cores = detectCores() - 1, collect_results = TRUE, use_future = FALSE,   in_memory = TRUE, verbose = FALSE, overwrite = FALSE,   compress = FALSE, make_request = TRUE, text_as_paths = FALSE,   cache = Sys.getenv(\"RECEPTIVITI_CACHE\"), cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"),   version = Sys.getenv(\"RECEPTIVITI_VERSION\"),   endpoint = Sys.getenv(\"RECEPTIVITI_ENDPOINT\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE (case, files read part bundles processing time, always case directory). Use files reliably enter files, dir reliably specify directory. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. files list file paths, alternate entry text. dir directory search files , alternate entry text. file_type File extension search , text path directory containing files read . encoding Encoding file(s) read . specified, detected, can fail, resulting mis-encoded characters; best (fasted) results, specify encoding. return_text Logical; TRUE, text included first column result. context Name analysis context. custom_context Name custom context (listed receptiviti_norming), TRUE context name custom context. api_args list additional arguments pass API (e.g., list(sallee_mode = \"sparse\")). Defaults receptiviti.api_args option. Custom norming contexts can established receptiviti_norming function, referred custom_context argument (available API V2). frameworks vector frameworks include results . Texts always scored available framework – just specifies return. Defaults , return scored frameworks. Can set receptiviti.frameworks option (e.g., options(receptiviti.frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. bundle_byte_limit Memory limit (bytes) bundle, 1e7 (10 MB, API's limit). May need lower API's limit, depending system's requesting library. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. collect_results Logical; FALSE, retain bundle results memory return. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API URL; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". version API version; defaults Sys.getenv(\"RECEPTIVITI_VERSION\"), defaults \"v1\". endpoint API endpoint (path name version); defaults Sys.getenv(\"RECEPTIVITI_ENDPOINT\"), defaults \"framework\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"Nothing collect_results FALSE. Otherwise, data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), column relevant entries api_args, scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":"request-process","dir":"Reference","previous_headings":"","what":"Request Process","title":"Receptiviti API — receptiviti","text":"function (along internal manage_request function) handles texts results several steps: Prepare bundles (split text <= bundle_size <= bundle_byte_limit bundles). text points directory list files, read later. in_memory FALSE, bundles written temporary location,           read back request made. Get scores texts within bundle. texts paths, in_memory FALSE, load texts. cache set, skip texts cached scores. request_cache TRUE, check cached request. texts need scoring make_request TRUE, send unscored texts API. request made request_cache set, cache response. cache set, write bundle scores cache. requests made, cache set, defragment cache         (combine bundle results within partitions). collect_results TRUE, prepare results: realign results text (id provided). output specified, write realigned results . drop additional columns (custom id provided). framework specified, use select columns results. Returns results.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":"cache","dir":"Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"cache argument specified, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache TRUE, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. primary cache checked bundle processed, existing results loaded time. processing many bundles parallel, many results cached, can cause system freeze potentially crash. avoid , limit number cores, disable parallel processing. cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. texts spread across multiple files, can efficiently processed parallel file contains single text (potentially collapsed multiple lines). files contain multiple texts (.e., collapse_lines = FALSE), texts need read bundling order ensure bundles length limit. Whether processing serial parallel, progress bars can specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) { # \\dontrun{  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar ## (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) } # }"},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_frameworks.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available Frameworks — receptiviti_frameworks","title":"List Available Frameworks — receptiviti_frameworks","text":"Retrieve list frameworks available account.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_frameworks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available Frameworks — receptiviti_frameworks","text":"","code":"receptiviti_frameworks(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"))"},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_frameworks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Available Frameworks — receptiviti_frameworks","text":"url, key, secret Request arguments; receptiviti.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_frameworks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available Frameworks — receptiviti_frameworks","text":"character vector containing names frameworks available account.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_frameworks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Available Frameworks — receptiviti_frameworks","text":"","code":"if (FALSE) { # \\dontrun{  # see which frameworks are available to your account frameworks <- receptiviti_frameworks() } # }"},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_norming.html","id":null,"dir":"Reference","previous_headings":"","what":"View or Establish Custom Norming Contexts — receptiviti_norming","title":"View or Establish Custom Norming Contexts — receptiviti_norming","text":"Custom norming contexts can used process later texts specifying custom_context API argument receptiviti function (e.g., receptiviti(\"text score\", version = \"v2\", options = list(custom_context = \"norm_name\")), norm_name name set ).","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_norming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View or Establish Custom Norming Contexts — receptiviti_norming","text":"","code":"receptiviti_norming(name = NULL, text = NULL, options = list(),   delete = FALSE, name_only = FALSE, id = NULL, text_column = NULL,   id_column = NULL, files = NULL, dir = NULL, file_type = \"txt\",   collapse_lines = FALSE, encoding = NULL, bundle_size = 1000,   bundle_byte_limit = 7500000, retry_limit = 50,   clear_scratch_cache = TRUE, cores = detectCores() - 1,   use_future = FALSE, in_memory = TRUE,   url = Sys.getenv(\"RECEPTIVITI_URL\"), key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE)"},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_norming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View or Establish Custom Norming Contexts — receptiviti_norming","text":"name Name new norming context, established provided text. providing name list previously created contexts. text Text processed used custom norming context. providing text return status named norming context. options Options set norming context (e.g., list(word_count_filter = 350, punctuation_filter = .25)). delete Logical; TRUE, request remove name context. name_only Logical; TRUE, return character vector names , including build-contexts. id, text_column, id_column, files, dir, file_type, collapse_lines, encoding Additional arguments used handle text; receptiviti. bundle_size, bundle_byte_limit, retry_limit, clear_scratch_cache, cores, use_future, in_memory Additional arguments used manage requests; receptiviti. key, secret, url Request arguments; receptiviti. verbose Logical; TRUE, show status messages.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_norming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View or Establish Custom Norming Contexts — receptiviti_norming","text":"Nothing delete TRUE. Otherwise, name specified, character vector containing names available norming context (built-custom). text specified, status named context list. texts provided, list: initial_status: Initial status context. first_pass: Response texts sent first time,      NULL initial status pass_two. second_pass: Response texts sent second time.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/reference/receptiviti_norming.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View or Establish Custom Norming Contexts — receptiviti_norming","text":"","code":"if (FALSE) { # \\dontrun{  # get status of all existing custom norming contexts contexts <- receptiviti_norming(name_only = TRUE)  # create or get the status of a single custom norming context status <- receptiviti_norming(\"new_context\")  # send texts to establish the context  ## these texts can be specified just like ## texts in the main receptiviti function  ## such as directly full_status <- receptiviti_norming(\"new_context\", c(   \"a text to set the norm\",   \"another text part of the new context\" ))  ## or from a file full_status <- receptiviti_norming(   \"new_context\", \"./path/to/text.csv\",   text_column = \"texts\" )  ## or from multiple files in a directory full_status <- receptiviti_norming(   \"new_context\",   dir = \"./path/to/txt_files\" ) } # }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/index.html","id":null,"dir":"V > 0.1.0 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.0 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"# install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.0 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.0 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.0 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.0 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.0 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.0 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(\"../files\") results <- receptiviti(   \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.0 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score b771013281f84420644c3fd2289f3d9b                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 b771013281f84420644c3fd2289f3d9b                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 b771013281f84420644c3fd2289f3d9b                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 b771013281f84420644c3fd2289f3d9b     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.0 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 468c24aa7dac18b7517469361676bffb                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 468c24aa7dac18b7517469361676bffb                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 468c24aa7dac18b7517469361676bffb                  2 #> 2  b 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 468c24aa7dac18b7517469361676bffb                  2 #> 2    a a2 468c24aa7dac18b7517469361676bffb                  2 #> 3    b b1 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2 #> 4    b b2 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.0 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 84% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.0 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.0 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousand texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) cache FALSE (avoid attempting read cache written another instance). Disabling cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/authors.html","id":null,"dir":"V > 0.1.0","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/authors.html","id":"citation","dir":"V > 0.1.0","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/index.html","id":"receptiviti","dir":"V > 0.1.0","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/index.html","id":"installation","dir":"V > 0.1.0","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: load package:","code":"# install.packages('remotes') remotes::install_github('receptiviti/receptiviti-r') library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/index.html","id":"features","dir":"V > 0.1.0","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/index.html","id":"examples","dir":"V > 0.1.0","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/index.html","id":"api-access","dir":"V > 0.1.0","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/LICENSE.html","id":null,"dir":"V > 0.1.0","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/index.html","id":"main-function","dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/index.html","id":null,"dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/receptiviti.html","id":null,"dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, file_type = \"txt\", return_text = FALSE,   frameworks = getOption(\"receptiviti_frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   collapse_lines = FALSE, retry_limit = 10, clear_cache = FALSE,   clear_scratch_cache = TRUE, request_cache = TRUE, cores = detectCores()   - 1, use_future = FALSE, in_memory = TRUE, verbose = FALSE,   overwrite = FALSE, compress = FALSE, make_request = TRUE,   text_as_paths = FALSE, cache = Sys.getenv(\"RECEPTIVITI_CACHE\"),   cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. file_type File extension search , text path directory containing files read . return_text Logical; TRUE, text included first column result. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti_frameworks option (e.g., options(receptiviti_frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API endpoint; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/receptiviti.html","id":"value","dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/receptiviti.html","id":"cache","dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"default, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache location specified, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. can disable prompt receptiviti.cache_prompt option (options(receptiviti.cache_prompt = FALSE)). cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can set cache argument FALSE prevent cache used, might make sense expect need reprocess . can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. Using future also allows progress bars specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.0/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.0 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/index.html","id":null,"dir":"V > 0.1.2 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.2 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.2 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.2 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.2 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.2 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.2 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.2 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(\"../files\") results <- receptiviti(   \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.2 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score b771013281f84420644c3fd2289f3d9b                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 b771013281f84420644c3fd2289f3d9b                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 b771013281f84420644c3fd2289f3d9b                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 b771013281f84420644c3fd2289f3d9b     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.2 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 468c24aa7dac18b7517469361676bffb                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 468c24aa7dac18b7517469361676bffb                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 468c24aa7dac18b7517469361676bffb                  2 #> 2  b 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 468c24aa7dac18b7517469361676bffb                  2 #> 2    a a2 468c24aa7dac18b7517469361676bffb                  2 #> 3    b b1 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2 #> 4    b b2 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.2 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 84% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.2 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.2 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousand texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) cache FALSE (avoid attempting read cache written another instance). Disabling cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/authors.html","id":null,"dir":"V > 0.1.2","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/authors.html","id":"citation","dir":"V > 0.1.2","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/index.html","id":"receptiviti","dir":"V > 0.1.2","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/index.html","id":"installation","dir":"V > 0.1.2","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.0) Development (version 0.1.1) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/index.html","id":"features","dir":"V > 0.1.2","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/index.html","id":"examples","dir":"V > 0.1.2","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/index.html","id":"api-access","dir":"V > 0.1.2","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/LICENSE.html","id":null,"dir":"V > 0.1.2","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/index.html","id":"main-function","dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/index.html","id":null,"dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/receptiviti.html","id":null,"dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, file_type = \"txt\", return_text = FALSE,   frameworks = getOption(\"receptiviti_frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   collapse_lines = FALSE, retry_limit = 10, clear_cache = FALSE,   clear_scratch_cache = TRUE, request_cache = TRUE, cores = detectCores()   - 1, use_future = FALSE, in_memory = TRUE, verbose = FALSE,   overwrite = FALSE, compress = FALSE, make_request = TRUE,   text_as_paths = FALSE, cache = Sys.getenv(\"RECEPTIVITI_CACHE\"),   cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. file_type File extension search , text path directory containing files read . return_text Logical; TRUE, text included first column result. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti_frameworks option (e.g., options(receptiviti_frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API endpoint; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/receptiviti.html","id":"value","dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/receptiviti.html","id":"cache","dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"default, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache location specified, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. can disable prompt receptiviti.cache_prompt option (options(receptiviti.cache_prompt = FALSE)). cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can set cache argument FALSE prevent cache used, might make sense expect need reprocess . can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. Using future also allows progress bars specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.2/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.2 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/index.html","id":null,"dir":"V > 0.1.3 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.3 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.3 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.3 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.3 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.3 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair. This call will not count towards your plan."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.3 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.3 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(\"../files\") results <- receptiviti(   \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.3 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score b771013281f84420644c3fd2289f3d9b                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 b771013281f84420644c3fd2289f3d9b                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 b771013281f84420644c3fd2289f3d9b                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 b771013281f84420644c3fd2289f3d9b     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.3 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 468c24aa7dac18b7517469361676bffb                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 468c24aa7dac18b7517469361676bffb                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 468c24aa7dac18b7517469361676bffb                  2 #> 2  b 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 468c24aa7dac18b7517469361676bffb                  2 #> 2    a a2 468c24aa7dac18b7517469361676bffb                  2 #> 3    b b1 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2 #> 4    b b2 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.3 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 66% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.3 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.3 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousand texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) cache FALSE (avoid attempting read cache written another instance). Disabling cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/authors.html","id":null,"dir":"V > 0.1.3","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/authors.html","id":"citation","dir":"V > 0.1.3","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/index.html","id":"receptiviti","dir":"V > 0.1.3","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/index.html","id":"installation","dir":"V > 0.1.3","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.2) Development (version 0.1.3) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/index.html","id":"features","dir":"V > 0.1.3","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/index.html","id":"examples","dir":"V > 0.1.3","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/index.html","id":"api-access","dir":"V > 0.1.3","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/LICENSE.html","id":null,"dir":"V > 0.1.3","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/news/index.html","id":"improvements-0-1-3","dir":"V > 0.1.3 > News","previous_headings":"receptiviti 0.1.3","what":"Improvements","title":"Changelog","text":"ID column can specified id, alternative id_column.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/news/index.html","id":"receptiviti-012","dir":"V > 0.1.3 > News","previous_headings":"","what":"receptiviti 0.1.2","title":"Changelog","text":"CRAN release: 2022-10-06","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/news/index.html","id":"bug-fixes-0-1-2","dir":"V > 0.1.3 > News","previous_headings":"receptiviti 0.1.2","what":"Bug Fixes","title":"Changelog","text":"Avoids establishing default cache non-interactive sessions.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/index.html","id":"main-function","dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/index.html","id":null,"dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/receptiviti.html","id":null,"dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, file_type = \"txt\", return_text = FALSE,   frameworks = getOption(\"receptiviti_frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   collapse_lines = FALSE, retry_limit = 10, clear_cache = FALSE,   clear_scratch_cache = TRUE, request_cache = TRUE, cores = detectCores()   - 1, use_future = FALSE, in_memory = TRUE, verbose = FALSE,   overwrite = FALSE, compress = FALSE, make_request = TRUE,   text_as_paths = FALSE, cache = Sys.getenv(\"RECEPTIVITI_CACHE\"),   cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. file_type File extension search , text path directory containing files read . return_text Logical; TRUE, text included first column result. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti_frameworks option (e.g., options(receptiviti_frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API endpoint; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/receptiviti.html","id":"value","dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/receptiviti.html","id":"cache","dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"default, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache location specified, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. can disable prompt receptiviti.cache_prompt option (options(receptiviti.cache_prompt = FALSE)). cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can set cache argument FALSE prevent cache used, might make sense expect need reprocess . can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. Using future also allows progress bars specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.3/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.3 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/index.html","id":null,"dir":"V > 0.1.4 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.4 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.4 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.4 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.4 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.4 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair. This call will not count towards your plan."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.4 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.4 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(\"../files\") results <- receptiviti(   \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.4 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score b771013281f84420644c3fd2289f3d9b                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 b771013281f84420644c3fd2289f3d9b                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 b771013281f84420644c3fd2289f3d9b                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 b771013281f84420644c3fd2289f3d9b     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.4 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 468c24aa7dac18b7517469361676bffb                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 468c24aa7dac18b7517469361676bffb                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 468c24aa7dac18b7517469361676bffb                  2 #> 2  b 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 468c24aa7dac18b7517469361676bffb                  2 #> 2    a a2 468c24aa7dac18b7517469361676bffb                  2 #> 3    b b1 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2 #> 4    b b2 0601f4c2ab4153a2fc4a1dc506c5fb9e                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.4 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 85% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 b771013281f84420644c3fd2289f3d9b                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.4 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.4 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousand texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) cache FALSE (avoid attempting read cache written another instance). Disabling cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/authors.html","id":null,"dir":"V > 0.1.4","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/authors.html","id":"citation","dir":"V > 0.1.4","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/index.html","id":"receptiviti","dir":"V > 0.1.4","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/index.html","id":"installation","dir":"V > 0.1.4","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.3) Development (version 0.1.4) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/index.html","id":"features","dir":"V > 0.1.4","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/index.html","id":"examples","dir":"V > 0.1.4","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/index.html","id":"api-access","dir":"V > 0.1.4","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/LICENSE.html","id":null,"dir":"V > 0.1.4","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/news/index.html","id":"features-0-1-4","dir":"V > 0.1.4 > News","previous_headings":"receptiviti 0.1.4","what":"Features","title":"Changelog","text":"Supports additional API argument.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/news/index.html","id":"improvements-0-1-4","dir":"V > 0.1.4 > News","previous_headings":"receptiviti 0.1.4","what":"Improvements","title":"Changelog","text":"Standardizes option name format (receptiviti_frameworks changed receptiviti.frameworks). Makes request cache sensitive URL credentials, make easier make different requests text.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/news/index.html","id":"bug-fixes-0-1-4","dir":"V > 0.1.4 > News","previous_headings":"receptiviti 0.1.4","what":"Bug Fixes","title":"Changelog","text":"Cleans cached malformed responses. Avoids unhandled body-size-related issue libcurl.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/news/index.html","id":"receptiviti-013","dir":"V > 0.1.4 > News","previous_headings":"","what":"receptiviti 0.1.3","title":"Changelog","text":"CRAN release: 2022-12-13","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/news/index.html","id":"improvements-0-1-3","dir":"V > 0.1.4 > News","previous_headings":"receptiviti 0.1.3","what":"Improvements","title":"Changelog","text":"ID column can specified id, alternative id_column.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/news/index.html","id":"receptiviti-012","dir":"V > 0.1.4 > News","previous_headings":"","what":"receptiviti 0.1.2","title":"Changelog","text":"CRAN release: 2022-10-06","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/news/index.html","id":"bug-fixes-0-1-2","dir":"V > 0.1.4 > News","previous_headings":"receptiviti 0.1.2","what":"Bug Fixes","title":"Changelog","text":"Avoids establishing default cache non-interactive sessions.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/index.html","id":"main-function","dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/index.html","id":null,"dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/receptiviti.html","id":null,"dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, file_type = \"txt\", return_text = FALSE,   api_args = getOption(\"receptiviti.api_args\", list()),   frameworks = getOption(\"receptiviti.frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   bundle_byte_limit = 7500000, collapse_lines = FALSE, retry_limit = 50,   clear_cache = FALSE, clear_scratch_cache = TRUE, request_cache = TRUE,   cores = detectCores() - 1, use_future = FALSE, in_memory = TRUE,   verbose = FALSE, overwrite = FALSE, compress = FALSE,   make_request = TRUE, text_as_paths = FALSE,   cache = Sys.getenv(\"RECEPTIVITI_CACHE\"), cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. file_type File extension search , text path directory containing files read . return_text Logical; TRUE, text included first column result. api_args list additional arguments pass API (e.g., list(sallee_mode = \"sparse\")). Defaults receptiviti.api_args option. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti.frameworks option (e.g., options(receptiviti.frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. bundle_byte_limit Memory limit (bytes) bundle, 1e7 (10 MB, API's limit). May need lower API's limit, depending system's requesting library. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API endpoint; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/receptiviti.html","id":"value","dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), column relevant entries api_args, scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/receptiviti.html","id":"cache","dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"default, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache location specified, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. can disable prompt receptiviti.cache_prompt option (options(receptiviti.cache_prompt = FALSE)). cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can set cache argument FALSE prevent cache used, might make sense expect need reprocess . can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. Using future also allows progress bars specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.4/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.4 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(\"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/index.html","id":null,"dir":"V > 0.1.5 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.5 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.5 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.5 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.5 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.5 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair. This call will not count towards your plan."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.5 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.5 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(\"../files\") results <- receptiviti(   \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.5 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 d4db6ab5080a540410c4429884c93045                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score d4db6ab5080a540410c4429884c93045                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 d4db6ab5080a540410c4429884c93045                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 d4db6ab5080a540410c4429884c93045                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 d4db6ab5080a540410c4429884c93045     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.5 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a e6d6e99c61fc084dfd33d7644c334ee6                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a e6d6e99c61fc084dfd33d7644c334ee6                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a e6d6e99c61fc084dfd33d7644c334ee6                  2 #> 2  b 40a54fe44d79d785d15ea498f086365b                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 e6d6e99c61fc084dfd33d7644c334ee6                  2 #> 2    a a2 e6d6e99c61fc084dfd33d7644c334ee6                  2 #> 3    b b1 40a54fe44d79d785d15ea498f086365b                  2 #> 4    b b2 40a54fe44d79d785d15ea498f086365b                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.5 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 85% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 d4db6ab5080a540410c4429884c93045                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 d4db6ab5080a540410c4429884c93045                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.5 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.5 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousands texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) enable primary cache (avoid attempting read cache written another instance). using primary cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/authors.html","id":null,"dir":"V > 0.1.5","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/authors.html","id":"citation","dir":"V > 0.1.5","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/index.html","id":"receptiviti","dir":"V > 0.1.5","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/index.html","id":"installation","dir":"V > 0.1.5","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.4) Development (version 0.1.5) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/index.html","id":"features","dir":"V > 0.1.5","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Optionally builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/index.html","id":"examples","dir":"V > 0.1.5","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/index.html","id":"api-access","dir":"V > 0.1.5","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/LICENSE.html","id":null,"dir":"V > 0.1.5","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"features-0-1-5","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.5","what":"Features","title":"Changelog","text":"Supports custom API versions endpoints.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"improvements-0-1-5","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.5","what":"Improvements","title":"Changelog","text":"Disables cache default. Adds files dir arguments clearer input. Returns file names IDs text_as_paths TRUE. Reworks text hashing improved cache handling.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"bug-fixes-0-1-5","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.5","what":"Bug Fixes","title":"Changelog","text":"Avoids unnecessary cache rewrites. Fixes partial cache updating.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"receptiviti-014","dir":"V > 0.1.5 > News","previous_headings":"","what":"receptiviti 0.1.4","title":"Changelog","text":"CRAN release: 2023-05-05","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"features-0-1-4","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.4","what":"Features","title":"Changelog","text":"Supports additional API argument.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"improvements-0-1-4","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.4","what":"Improvements","title":"Changelog","text":"Standardizes option name format (receptiviti_frameworks changed receptiviti.frameworks). Makes request cache sensitive URL credentials, make easier make different requests text.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"bug-fixes-0-1-4","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.4","what":"Bug Fixes","title":"Changelog","text":"Cleans cached malformed responses. Avoids unhandled body-size-related issue libcurl.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"receptiviti-013","dir":"V > 0.1.5 > News","previous_headings":"","what":"receptiviti 0.1.3","title":"Changelog","text":"CRAN release: 2022-12-13","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"improvements-0-1-3","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.3","what":"Improvements","title":"Changelog","text":"ID column can specified id, alternative id_column.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"receptiviti-012","dir":"V > 0.1.5 > News","previous_headings":"","what":"receptiviti 0.1.2","title":"Changelog","text":"CRAN release: 2022-10-06","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/news/index.html","id":"bug-fixes-0-1-2","dir":"V > 0.1.5 > News","previous_headings":"receptiviti 0.1.2","what":"Bug Fixes","title":"Changelog","text":"Avoids establishing default cache non-interactive sessions.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/index.html","id":"main-function","dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/index.html","id":null,"dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/receptiviti.html","id":null,"dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, files = NULL, dir = NULL, file_type = \"txt\",   return_text = FALSE, api_args = getOption(\"receptiviti.api_args\",   list()), frameworks = getOption(\"receptiviti.frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   bundle_byte_limit = 7500000, collapse_lines = FALSE, retry_limit = 50,   clear_cache = FALSE, clear_scratch_cache = TRUE, request_cache = TRUE,   cores = detectCores() - 1, use_future = FALSE, in_memory = TRUE,   verbose = FALSE, overwrite = FALSE, compress = FALSE,   make_request = TRUE, text_as_paths = FALSE,   cache = Sys.getenv(\"RECEPTIVITI_CACHE\"), cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"),   version = Sys.getenv(\"RECEPTIVITI_VERSION\"),   endpoint = Sys.getenv(\"RECEPTIVITI_ENDPOINT\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE (case, files read part bundles processing time, always case directory). Use files reliably enter files, dir reliably specify directory. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. files list file paths, alternate entry text. dir directory search files , alternate entry text. file_type File extension search , text path directory containing files read . return_text Logical; TRUE, text included first column result. api_args list additional arguments pass API (e.g., list(sallee_mode = \"sparse\")). Defaults receptiviti.api_args option. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti.frameworks option (e.g., options(receptiviti.frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. bundle_byte_limit Memory limit (bytes) bundle, 1e7 (10 MB, API's limit). May need lower API's limit, depending system's requesting library. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API URL; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". version API version; defaults Sys.getenv(\"RECEPTIVITI_VERSION\"), defaults \"v1\". endpoint API endpoint (path name version); defaults Sys.getenv(\"RECEPTIVITI_ENDPOINT\"), defaults \"framework\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/receptiviti.html","id":"value","dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), column relevant entries api_args, scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/receptiviti.html","id":"cache","dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"cache argument specified, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache TRUE, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. primary cache checked bundle processed, existing results loaded time. processing many bundles parallel, many results cached, can cause system freeze potentially crash. avoid , limit number cores, disable parallel processing. cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. texts spread across multiple files, can efficiently processed parallel file contains single text (potentially collapsed multiple lines). files contain multiple texts (.e., collapse_lines = FALSE), texts need read bundling order ensure bundles length limit. Whether processing serial parallel, progress bars can specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.5/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.5 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/index.html","id":null,"dir":"V > 0.1.6 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.6 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.6 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.6 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.6 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.6 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair. This call will not count towards your plan."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.6 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.6 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(files = c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   files = c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(dir = \"../files\") results <- receptiviti(   dir = \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.6 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score acab8277267d0efee0828f94e0919ddf                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 acab8277267d0efee0828f94e0919ddf                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 acab8277267d0efee0828f94e0919ddf                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 acab8277267d0efee0828f94e0919ddf     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.6 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 42ff59040f004970040f90a19aa6b3fa                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  b 4db2bfd2c8140dffac0060c9fb1c6d6f                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 42ff59040f004970040f90a19aa6b3fa                  2 #> 2    a a2 42ff59040f004970040f90a19aa6b3fa                  2 #> 3    b b1 4db2bfd2c8140dffac0060c9fb1c6d6f                  2 #> 4    b b2 4db2bfd2c8140dffac0060c9fb1c6d6f                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.6 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 85% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.6 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.6 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousands texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) enable primary cache (avoid attempting read cache written another instance). using primary cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/authors.html","id":null,"dir":"V > 0.1.6","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/authors.html","id":"citation","dir":"V > 0.1.6","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/index.html","id":"receptiviti","dir":"V > 0.1.6","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API. Python package also available Receptiviti/receptiviti-python.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/index.html","id":"installation","dir":"V > 0.1.6","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.5) Development (version 0.1.6) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/index.html","id":"features","dir":"V > 0.1.6","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Optionally builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/index.html","id":"examples","dir":"V > 0.1.6","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/index.html","id":"api-access","dir":"V > 0.1.6","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/LICENSE.html","id":null,"dir":"V > 0.1.6","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"improvements-0-1-6","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.6","what":"Improvements","title":"Changelog","text":"Adds encoding argument; improves handling non-UTF-8 files.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"bug-fixes-0-1-6","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.6","what":"Bug Fixes","title":"Changelog","text":"Fixes collapse_line reading files directory. Fixes version endpoint extraction URL.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"receptiviti-015","dir":"V > 0.1.6 > News","previous_headings":"","what":"receptiviti 0.1.5","title":"Changelog","text":"CRAN release: 2023-09-18","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"features-0-1-5","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.5","what":"Features","title":"Changelog","text":"Supports custom API versions endpoints.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"improvements-0-1-5","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.5","what":"Improvements","title":"Changelog","text":"Disables cache default. Adds files dir arguments clearer input. Returns file names IDs text_as_paths TRUE. Reworks text hashing improved cache handling.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"bug-fixes-0-1-5","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.5","what":"Bug Fixes","title":"Changelog","text":"Avoids unnecessary cache rewrites. Fixes partial cache updating.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"receptiviti-014","dir":"V > 0.1.6 > News","previous_headings":"","what":"receptiviti 0.1.4","title":"Changelog","text":"CRAN release: 2023-05-05","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"features-0-1-4","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.4","what":"Features","title":"Changelog","text":"Supports additional API argument.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"improvements-0-1-4","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.4","what":"Improvements","title":"Changelog","text":"Standardizes option name format (receptiviti_frameworks changed receptiviti.frameworks). Makes request cache sensitive URL credentials, make easier make different requests text.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"bug-fixes-0-1-4","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.4","what":"Bug Fixes","title":"Changelog","text":"Cleans cached malformed responses. Avoids unhandled body-size-related issue libcurl.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"receptiviti-013","dir":"V > 0.1.6 > News","previous_headings":"","what":"receptiviti 0.1.3","title":"Changelog","text":"CRAN release: 2022-12-13","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"improvements-0-1-3","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.3","what":"Improvements","title":"Changelog","text":"ID column can specified id, alternative id_column.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"receptiviti-012","dir":"V > 0.1.6 > News","previous_headings":"","what":"receptiviti 0.1.2","title":"Changelog","text":"CRAN release: 2022-10-06","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"bug-fixes-0-1-2","dir":"V > 0.1.6 > News","previous_headings":"receptiviti 0.1.2","what":"Bug Fixes","title":"Changelog","text":"Avoids establishing default cache non-interactive sessions.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/news/index.html","id":"receptiviti-010","dir":"V > 0.1.6 > News","previous_headings":"","what":"receptiviti 0.1.0","title":"Changelog","text":"CRAN release: 2022-09-14 First release.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/index.html","id":"main-function","dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/index.html","id":null,"dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/receptiviti.html","id":null,"dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, files = NULL, dir = NULL, file_type = \"txt\",   encoding = NULL, return_text = FALSE,   api_args = getOption(\"receptiviti.api_args\", list()),   frameworks = getOption(\"receptiviti.frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   bundle_byte_limit = 7500000, collapse_lines = FALSE, retry_limit = 50,   clear_cache = FALSE, clear_scratch_cache = TRUE, request_cache = TRUE,   cores = detectCores() - 1, use_future = FALSE, in_memory = TRUE,   verbose = FALSE, overwrite = FALSE, compress = FALSE,   make_request = TRUE, text_as_paths = FALSE,   cache = Sys.getenv(\"RECEPTIVITI_CACHE\"), cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"),   version = Sys.getenv(\"RECEPTIVITI_VERSION\"),   endpoint = Sys.getenv(\"RECEPTIVITI_ENDPOINT\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE (case, files read part bundles processing time, always case directory). Use files reliably enter files, dir reliably specify directory. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. files list file paths, alternate entry text. dir directory search files , alternate entry text. file_type File extension search , text path directory containing files read . encoding Encoding file(s) read . specified, detected, can fail, resulting mis-encoded characters; best (fasted) results, specify encoding. return_text Logical; TRUE, text included first column result. api_args list additional arguments pass API (e.g., list(sallee_mode = \"sparse\")). Defaults receptiviti.api_args option. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti.frameworks option (e.g., options(receptiviti.frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. bundle_byte_limit Memory limit (bytes) bundle, 1e7 (10 MB, API's limit). May need lower API's limit, depending system's requesting library. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API URL; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". version API version; defaults Sys.getenv(\"RECEPTIVITI_VERSION\"), defaults \"v1\". endpoint API endpoint (path name version); defaults Sys.getenv(\"RECEPTIVITI_ENDPOINT\"), defaults \"framework\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/receptiviti.html","id":"value","dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), column relevant entries api_args, scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/receptiviti.html","id":"cache","dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"cache argument specified, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache TRUE, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. primary cache checked bundle processed, existing results loaded time. processing many bundles parallel, many results cached, can cause system freeze potentially crash. avoid , limit number cores, disable parallel processing. cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. texts spread across multiple files, can efficiently processed parallel file contains single text (potentially collapsed multiple lines). files contain multiple texts (.e., collapse_lines = FALSE), texts need read bundling order ensure bundles length limit. Whether processing serial parallel, progress bars can specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.6/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.6 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/index.html","id":null,"dir":"V > 0.1.7 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.7 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.7 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.7 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.7 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.7 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair. This call will not count towards your plan."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.7 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.7 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(files = c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   files = c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(dir = \"../files\") results <- receptiviti(   dir = \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.7 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score acab8277267d0efee0828f94e0919ddf                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 acab8277267d0efee0828f94e0919ddf                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 acab8277267d0efee0828f94e0919ddf                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 acab8277267d0efee0828f94e0919ddf     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.7 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 42ff59040f004970040f90a19aa6b3fa                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  b 4db2bfd2c8140dffac0060c9fb1c6d6f                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 42ff59040f004970040f90a19aa6b3fa                  2 #> 2    a a2 42ff59040f004970040f90a19aa6b3fa                  2 #> 3    b b1 4db2bfd2c8140dffac0060c9fb1c6d6f                  2 #> 4    b b2 4db2bfd2c8140dffac0060c9fb1c6d6f                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.7 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 85% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.7 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.7 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousands texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) enable primary cache (avoid attempting read cache written another instance). using primary cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/authors.html","id":null,"dir":"V > 0.1.7","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/authors.html","id":"citation","dir":"V > 0.1.7","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/index.html","id":"receptiviti","dir":"V > 0.1.7","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API. Python package also available Receptiviti/receptiviti-python.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/index.html","id":"installation","dir":"V > 0.1.7","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.7) Development (version 0.1.8) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/index.html","id":"features","dir":"V > 0.1.7","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Optionally builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/index.html","id":"examples","dir":"V > 0.1.7","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/index.html","id":"api-access","dir":"V > 0.1.7","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/LICENSE.html","id":null,"dir":"V > 0.1.7","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"receptiviti-017","dir":"V > 0.1.7 > News","previous_headings":"","what":"receptiviti 0.1.7","title":"Changelog","text":"CRAN release: 2024-02-23","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"improvements-0-1-7","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.7","what":"Improvements","title":"Changelog","text":"Suggests rather imports optional packages (arrow dplyr cache, future.apply use Future).","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"receptiviti-016","dir":"V > 0.1.7 > News","previous_headings":"","what":"receptiviti 0.1.6","title":"Changelog","text":"CRAN release: 2023-11-27","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"improvements-0-1-6","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.6","what":"Improvements","title":"Changelog","text":"Adds encoding argument; improves handling non-UTF-8 files.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"bug-fixes-0-1-6","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.6","what":"Bug Fixes","title":"Changelog","text":"Fixes collapse_line reading files directory. Fixes version endpoint extraction URL.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"receptiviti-015","dir":"V > 0.1.7 > News","previous_headings":"","what":"receptiviti 0.1.5","title":"Changelog","text":"CRAN release: 2023-09-18","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"features-0-1-5","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.5","what":"Features","title":"Changelog","text":"Supports custom API versions endpoints.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"improvements-0-1-5","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.5","what":"Improvements","title":"Changelog","text":"Disables cache default. Adds files dir arguments clearer input. Returns file names IDs text_as_paths TRUE. Reworks text hashing improved cache handling.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"bug-fixes-0-1-5","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.5","what":"Bug Fixes","title":"Changelog","text":"Avoids unnecessary cache rewrites. Fixes partial cache updating.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"receptiviti-014","dir":"V > 0.1.7 > News","previous_headings":"","what":"receptiviti 0.1.4","title":"Changelog","text":"CRAN release: 2023-05-05","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"features-0-1-4","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.4","what":"Features","title":"Changelog","text":"Supports additional API argument.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"improvements-0-1-4","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.4","what":"Improvements","title":"Changelog","text":"Standardizes option name format (receptiviti_frameworks changed receptiviti.frameworks). Makes request cache sensitive URL credentials, make easier make different requests text.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"bug-fixes-0-1-4","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.4","what":"Bug Fixes","title":"Changelog","text":"Cleans cached malformed responses. Avoids unhandled body-size-related issue libcurl.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"receptiviti-013","dir":"V > 0.1.7 > News","previous_headings":"","what":"receptiviti 0.1.3","title":"Changelog","text":"CRAN release: 2022-12-13","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"improvements-0-1-3","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.3","what":"Improvements","title":"Changelog","text":"ID column can specified id, alternative id_column.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"receptiviti-012","dir":"V > 0.1.7 > News","previous_headings":"","what":"receptiviti 0.1.2","title":"Changelog","text":"CRAN release: 2022-10-06","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"bug-fixes-0-1-2","dir":"V > 0.1.7 > News","previous_headings":"receptiviti 0.1.2","what":"Bug Fixes","title":"Changelog","text":"Avoids establishing default cache non-interactive sessions.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/news/index.html","id":"receptiviti-010","dir":"V > 0.1.7 > News","previous_headings":"","what":"receptiviti 0.1.0","title":"Changelog","text":"CRAN release: 2022-09-14 First release.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/index.html","id":"main-function","dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/index.html","id":null,"dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/receptiviti.html","id":null,"dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, files = NULL, dir = NULL, file_type = \"txt\",   encoding = NULL, return_text = FALSE,   api_args = getOption(\"receptiviti.api_args\", list()),   frameworks = getOption(\"receptiviti.frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   bundle_byte_limit = 7500000, collapse_lines = FALSE, retry_limit = 50,   clear_cache = FALSE, clear_scratch_cache = TRUE, request_cache = TRUE,   cores = detectCores() - 1, use_future = FALSE, in_memory = TRUE,   verbose = FALSE, overwrite = FALSE, compress = FALSE,   make_request = TRUE, text_as_paths = FALSE,   cache = Sys.getenv(\"RECEPTIVITI_CACHE\"), cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"),   version = Sys.getenv(\"RECEPTIVITI_VERSION\"),   endpoint = Sys.getenv(\"RECEPTIVITI_ENDPOINT\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE (case, files read part bundles processing time, always case directory). Use files reliably enter files, dir reliably specify directory. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. files list file paths, alternate entry text. dir directory search files , alternate entry text. file_type File extension search , text path directory containing files read . encoding Encoding file(s) read . specified, detected, can fail, resulting mis-encoded characters; best (fasted) results, specify encoding. return_text Logical; TRUE, text included first column result. api_args list additional arguments pass API (e.g., list(sallee_mode = \"sparse\")). Defaults receptiviti.api_args option. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti.frameworks option (e.g., options(receptiviti.frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. bundle_byte_limit Memory limit (bytes) bundle, 1e7 (10 MB, API's limit). May need lower API's limit, depending system's requesting library. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API URL; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". version API version; defaults Sys.getenv(\"RECEPTIVITI_VERSION\"), defaults \"v1\". endpoint API endpoint (path name version); defaults Sys.getenv(\"RECEPTIVITI_ENDPOINT\"), defaults \"framework\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/receptiviti.html","id":"value","dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), column relevant entries api_args, scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/receptiviti.html","id":"cache","dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"cache argument specified, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache TRUE, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. primary cache checked bundle processed, existing results loaded time. processing many bundles parallel, many results cached, can cause system freeze potentially crash. avoid , limit number cores, disable parallel processing. cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. texts spread across multiple files, can efficiently processed parallel file contains single text (potentially collapsed multiple lines). files contain multiple texts (.e., collapse_lines = FALSE), texts need read bundling order ensure bundles length limit. Whether processing serial parallel, progress bars can specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.7/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.7 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/index.html","id":null,"dir":"V > 0.1.8 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Get Started","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"install-and-load","dir":"V > 0.1.8 > Articles","previous_headings":"","what":"Install and Load","title":"Get Started","text":"First, download install R system: Windows | Mac | Linux may also want download install RStudio nice interface R. , R console, install package; needs done : time start R session, load package:","code":"install.packages(\"receptiviti\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"set-up-api-credentials","dir":"V > 0.1.8 > Articles","previous_headings":"","what":"Set Up API Credentials","title":"Get Started","text":"can find API key secret dashboard. can set credentials R permanently temporarily:","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"permanent","dir":"V > 0.1.8 > Articles","previous_headings":"Set Up API Credentials","what":"Permanent","title":"Get Started","text":"Open create ~/.Renviron file: add environment variables key secret: restart R changes take effect.","code":"usethis::edit_r_environ() RECEPTIVITI_KEY=\"\" RECEPTIVITI_SECRET=\"\""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"temporary","dir":"V > 0.1.8 > Articles","previous_headings":"Set Up API Credentials","what":"Temporary","title":"Get Started","text":"Add key secret, run start session:","code":"Sys.setenv(   RECEPTIVITI_KEY = \"\",   RECEPTIVITI_SECRET = \"\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"confirm-credentials","dir":"V > 0.1.8 > Articles","previous_headings":"Set Up API Credentials","what":"Confirm Credentials","title":"Get Started","text":"Check API reachable, credentials recognized: credentials recognized, ’ll get response like :","code":"receptiviti_status() #> Status: OK #> Message: Hello there, World! receptiviti_status(key = 123, secret = 123) #> Status: ERROR #> Message: 401 (1411): Unrecognized API key pair. This call will not count towards your plan."},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"loaded-text","dir":"V > 0.1.8 > Articles","previous_headings":"Enter Your Text","what":"Loaded Text","title":"Get Started","text":"texts already R, can enter directly. can single character: character vector: data.frame:","code":"results <- receptiviti(\"texts to score\") results <- receptiviti(c(\"text one\", \"text two\")) data <- data.frame(texts = c(\"text a\", \"text b\"))  # directly results <- receptiviti(data$texts)  # by column name results <- receptiviti(data, text_column = \"texts\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"text-in-files","dir":"V > 0.1.8 > Articles","previous_headings":"Enter Your Text","what":"Text in files","title":"Get Started","text":"can enter paths files containing separate texts line: comma delimited file column containing text. , text_column argument specifies column contains text: can point directory containing text files: default .txt files looked , can specify .csv files file_type argument:","code":"# single results <- receptiviti(\"../files/file.txt\")  # multiple results <- receptiviti(files = c(\"../files/file1.txt\", \"../files/file2.txt\")) # single results <- receptiviti(\"../files/file.csv\", text_column = \"text\")  # multiple results <- receptiviti(   files = c(\"../files/file1.csv\", \"../files/file2.csv\"),   text_column = \"text\" ) results <- receptiviti(dir = \"../files\") results <- receptiviti(   dir = \"../files\",   text_column = \"text\", file_type = \"csv\" )"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"returned-results","dir":"V > 0.1.8 > Articles","previous_headings":"Use Results","what":"Returned Results","title":"Get Started","text":"default, results returned data.frame, row text, columns framework variable: , first column (text_hash) MD5 hash text, identifies unique texts, stored main cache. entered text can also included return_text argument: can also select frameworks returned: default, single framework column names without framework name, can retain framework_prefix = TRUE: can also results returned list frameworks, might make easier work separately:","code":"results <- receptiviti(\"texts to score\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 results <- receptiviti(\"texts to score\", return_text = TRUE) results[, 1:3] #>             text                        text_hash summary.word_count #> 1 texts to score acab8277267d0efee0828f94e0919ddf                  3 results <- receptiviti(\"texts to score\", frameworks = \"liwc\") results[, 1:4] #>                          text_hash analytical_thinking clout authentic #> 1 acab8277267d0efee0828f94e0919ddf                0.99   0.5      0.01 results <- receptiviti(   \"texts to score\",   frameworks = \"liwc\", framework_prefix = TRUE ) results[, 1:3] #>                          text_hash liwc.analytical_thinking liwc.clout #> 1 acab8277267d0efee0828f94e0919ddf                     0.99        0.5 results <- receptiviti(\"texts to score\", as_list = TRUE) results$personality[, 1:4] #>                          text_hash extraversion   active assertive #> 1 acab8277267d0efee0828f94e0919ddf     40.60506 43.54977  32.54014"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"aligning-results","dir":"V > 0.1.8 > Articles","previous_headings":"Use Results","what":"Aligning Results","title":"Get Started","text":"Results returned way aligns text enter originally, including duplicates invalid entries. means can add results object original data: can also provide vector unique IDs returned results can merged data:","code":"data <- data.frame(id = 1:4, text = c(\"text a\", NA, \"\", \"text a\")) results <- receptiviti(data$text)  # combine data and results cbind(data, results)[, 1:4] #>   id   text                        text_hash summary.word_count #> 1  1 text a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  2   <NA>                             <NA>                 NA #> 3  3                                    <NA>                 NA #> 4  4 text a 42ff59040f004970040f90a19aa6b3fa                  2 results <- receptiviti(c(\"text a\", \"text b\"), id = c(\"a\", \"b\")) results[, 1:3] #>   id                        text_hash summary.word_count #> 1  a 42ff59040f004970040f90a19aa6b3fa                  2 #> 2  b 4db2bfd2c8140dffac0060c9fb1c6d6f                  2  # merge with a new dataset data <- data.frame(   id = c(\"a1\", \"b1\", \"a2\", \"b2\"),   type = c(\"a\", \"b\", \"a\", \"b\") ) merge(data, results, by.x = \"type\", by.y = \"id\")[, 1:4] #>   type id                        text_hash summary.word_count #> 1    a a1 42ff59040f004970040f90a19aa6b3fa                  2 #> 2    a a2 42ff59040f004970040f90a19aa6b3fa                  2 #> 3    b b1 4db2bfd2c8140dffac0060c9fb1c6d6f                  2 #> 4    b b2 4db2bfd2c8140dffac0060c9fb1c6d6f                  2"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"saved-results","dir":"V > 0.1.8 > Articles","previous_headings":"Use Results","what":"Saved Results","title":"Get Started","text":"Results can also saved .csv file: can compressed: case, compressed file 85% smaller.","code":"receptiviti(\"texts to score\", \"../results.csv\", overwrite = TRUE) results <- read.csv(\"../results.csv\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1 receptiviti(   \"texts to score\", \"../results.csv.xz\",   compress = TRUE, overwrite = TRUE ) results <- read.csv(\"../results.csv.xz\") results[, 1:4] #>                          text_hash summary.word_count #> 1 acab8277267d0efee0828f94e0919ddf                  3 #>   summary.words_per_sentence summary.sentence_count #> 1                          3                      1"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"preserving-results","dir":"V > 0.1.8 > Articles","previous_headings":"","what":"Preserving Results","title":"Get Started","text":"receptiviti function tries avoid sending texts API much possible: part preparation process, excludes duplicates invalid texts. primary cache Arrow database located cache augment. format determined cache_format. can skip checking initially still writing results cache_overwrite = TRUE. can cleared clear_cache = TRUE. Responses stored tempdir() .json files named bundle’s MD5 hash. can avoid using cache request_cache = FALSE. cache cleared R restarted. want make sure texts sent API, can use make_request = FALSE. use primary request cache, fail texts found . call fails results can written cache returned, received responses still request cache, deleted R restarted. want preserve need restart R, can move cached responses tempdir(), replace restarting.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/articles/receptiviti.html","id":"handling-big-data","dir":"V > 0.1.8 > Articles","previous_headings":"","what":"Handling Big Data","title":"Get Started","text":"receptiviti function handle splitting texts bundles, limit many texts can process come system’s amount random access memory (RAM). Several thousands texts fine, getting millions texts, may able results loaded . get around , can fully process subsets texts. benefit processing texts requests can parallelized, RAM intensive, primary cache updated less frequently (updated end complete run). also parallelize batches, sure set cores 1 (disable function’s parallelization) enable primary cache (avoid attempting read cache written another instance). using primary cache also efficient, may want ensure sending duplicate texts calls. function handles duplicate texts within calls (ever sending unique texts), depends cache avoid sending duplicates calls.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/authors.html","id":null,"dir":"V > 0.1.8","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Receptiviti Inc.. Funder, copyright holder. Kent English. Maintainer. Micah Iserman. Author, contractor.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/authors.html","id":"citation","dir":"V > 0.1.8","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Receptiviti Inc. (2022). receptiviti: Text Analysis Receptiviti API. url: receptiviti.github.io/receptiviti-r","code":"@Manual{,   title = {receptiviti: Text Analysis Through the Receptiviti API},   author = {{Receptiviti Inc.}},   year = {2022},   url = {https://receptiviti.github.io/receptiviti-r/}, }"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/index.html","id":"receptiviti","dir":"V > 0.1.8","previous_headings":"","what":"Text Analysis Through the Receptiviti API","title":"Text Analysis Through the Receptiviti API","text":"R package process text Receptiviti API. Python package also available Receptiviti/receptiviti-python.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/index.html","id":"installation","dir":"V > 0.1.8","previous_headings":"","what":"Installation","title":"Text Analysis Through the Receptiviti API","text":"Download R r-project.org, install package R console: Release (version 0.1.7) Development (version 0.1.8) load package:","code":"install.packages(\"receptiviti\") # install.packages(\"remotes\") remotes::install_github(\"Receptiviti/receptiviti-r\") library(receptiviti)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/index.html","id":"features","dir":"V > 0.1.8","previous_headings":"","what":"Features","title":"Text Analysis Through the Receptiviti API","text":"Makes requests Receptiviti API, working around size rate limitations. Avoids sending invalid identical texts, repeating requests session. Optionally builds local database returned results avoid making repeat requests longer-term.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/index.html","id":"examples","dir":"V > 0.1.8","previous_headings":"","what":"Examples","title":"Text Analysis Through the Receptiviti API","text":"","code":"# score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score texts in a single file results <- receptiviti(\"./path/to/file.csv\", text_column = \"text\")"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/index.html","id":"api-access","dir":"V > 0.1.8","previous_headings":"","what":"API Access","title":"Text Analysis Through the Receptiviti API","text":"access API, need load key secret, found dashboard. can enter arguments function call, default looked environment variables: can store R environment file permanently: set temporarily:","code":"RECEPTIVITI_KEY=\"32lettersandnumbers\" RECEPTIVITI_SECRET=\"56LettersAndNumbers\" # opens ~/.Renviron; after editing, save and restart R usethis::edit_r_environ() Sys.setenv(   RECEPTIVITI_KEY = \"32lettersandnumbers\",   RECEPTIVITI_SECRET = \"56LettersAndNumbers\" )"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/LICENSE.html","id":null,"dir":"V > 0.1.8","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Receptiviti Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"improvements-0-1-8","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.8","what":"Improvements","title":"Changelog","text":"Makes encoding detection reliable.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"receptiviti-017","dir":"V > 0.1.8 > News","previous_headings":"","what":"receptiviti 0.1.7","title":"Changelog","text":"CRAN release: 2024-02-23","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"improvements-0-1-7","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.7","what":"Improvements","title":"Changelog","text":"Suggests rather imports optional packages (arrow dplyr cache, future.apply use Future).","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"receptiviti-016","dir":"V > 0.1.8 > News","previous_headings":"","what":"receptiviti 0.1.6","title":"Changelog","text":"CRAN release: 2023-11-27","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"improvements-0-1-6","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.6","what":"Improvements","title":"Changelog","text":"Adds encoding argument; improves handling non-UTF-8 files.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"bug-fixes-0-1-6","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.6","what":"Bug Fixes","title":"Changelog","text":"Fixes collapse_line reading files directory. Fixes version endpoint extraction URL.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"receptiviti-015","dir":"V > 0.1.8 > News","previous_headings":"","what":"receptiviti 0.1.5","title":"Changelog","text":"CRAN release: 2023-09-18","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"features-0-1-5","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.5","what":"Features","title":"Changelog","text":"Supports custom API versions endpoints.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"improvements-0-1-5","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.5","what":"Improvements","title":"Changelog","text":"Disables cache default. Adds files dir arguments clearer input. Returns file names IDs text_as_paths TRUE. Reworks text hashing improved cache handling.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"bug-fixes-0-1-5","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.5","what":"Bug Fixes","title":"Changelog","text":"Avoids unnecessary cache rewrites. Fixes partial cache updating.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"receptiviti-014","dir":"V > 0.1.8 > News","previous_headings":"","what":"receptiviti 0.1.4","title":"Changelog","text":"CRAN release: 2023-05-05","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"features-0-1-4","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.4","what":"Features","title":"Changelog","text":"Supports additional API argument.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"improvements-0-1-4","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.4","what":"Improvements","title":"Changelog","text":"Standardizes option name format (receptiviti_frameworks changed receptiviti.frameworks). Makes request cache sensitive URL credentials, make easier make different requests text.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"bug-fixes-0-1-4","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.4","what":"Bug Fixes","title":"Changelog","text":"Cleans cached malformed responses. Avoids unhandled body-size-related issue libcurl.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"receptiviti-013","dir":"V > 0.1.8 > News","previous_headings":"","what":"receptiviti 0.1.3","title":"Changelog","text":"CRAN release: 2022-12-13","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"improvements-0-1-3","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.3","what":"Improvements","title":"Changelog","text":"ID column can specified id, alternative id_column.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"receptiviti-012","dir":"V > 0.1.8 > News","previous_headings":"","what":"receptiviti 0.1.2","title":"Changelog","text":"CRAN release: 2022-10-06","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"bug-fixes-0-1-2","dir":"V > 0.1.8 > News","previous_headings":"receptiviti 0.1.2","what":"Bug Fixes","title":"Changelog","text":"Avoids establishing default cache non-interactive sessions.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/news/index.html","id":"receptiviti-010","dir":"V > 0.1.8 > News","previous_headings":"","what":"receptiviti 0.1.0","title":"Changelog","text":"CRAN release: 2022-09-14 First release.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/index.html","id":"main-function","dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Main Function","title":"Function reference","text":"main function score texts API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/index.html","id":null,"dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Function reference","title":"Function reference","text":"receptiviti() receptiviti_status() Receptiviti API","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/receptiviti.html","id":null,"dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Receptiviti API — receptiviti","title":"Receptiviti API — receptiviti","text":"main function access Receptiviti API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/receptiviti.html","id":"ref-usage","dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Usage","title":"Receptiviti API — receptiviti","text":"","code":"receptiviti(text, output = NULL, id = NULL, text_column = NULL,   id_column = NULL, files = NULL, dir = NULL, file_type = \"txt\",   encoding = NULL, return_text = FALSE,   api_args = getOption(\"receptiviti.api_args\", list()),   frameworks = getOption(\"receptiviti.frameworks\", \"all\"),   framework_prefix = TRUE, as_list = FALSE, bundle_size = 1000,   bundle_byte_limit = 7500000, collapse_lines = FALSE, retry_limit = 50,   clear_cache = FALSE, clear_scratch_cache = TRUE, request_cache = TRUE,   cores = detectCores() - 1, use_future = FALSE, in_memory = TRUE,   verbose = FALSE, overwrite = FALSE, compress = FALSE,   make_request = TRUE, text_as_paths = FALSE,   cache = Sys.getenv(\"RECEPTIVITI_CACHE\"), cache_overwrite = FALSE,   cache_format = Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\", \"parquet\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"),   url = Sys.getenv(\"RECEPTIVITI_URL\"),   version = Sys.getenv(\"RECEPTIVITI_VERSION\"),   endpoint = Sys.getenv(\"RECEPTIVITI_ENDPOINT\"))  receptiviti_status(url = Sys.getenv(\"RECEPTIVITI_URL\"),   key = Sys.getenv(\"RECEPTIVITI_KEY\"),   secret = Sys.getenv(\"RECEPTIVITI_SECRET\"), verbose = TRUE,   include_headers = FALSE)"},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/receptiviti.html","id":"arguments","dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Arguments","title":"Receptiviti API — receptiviti","text":"text character vector text processed, path directory containing files, vector file paths. single path directory, file collapsed single text. path file files, line row treated separate text, unless collapse_lines TRUE (case, files read part bundles processing time, always case directory). Use files reliably enter files, dir reliably specify directory. output Path .csv file write results . already exists, set overwrite TRUE overwrite . id Vector unique IDs length text, included results. text_column, id_column Column name text/id, text matrix-like object, path csv file. files list file paths, alternate entry text. dir directory search files , alternate entry text. file_type File extension search , text path directory containing files read . encoding Encoding file(s) read . specified, detected, can fail, resulting mis-encoded characters; best (fasted) results, specify encoding. return_text Logical; TRUE, text included first column result. api_args list additional arguments pass API (e.g., list(sallee_mode = \"sparse\")). Defaults receptiviti.api_args option. frameworks vector frameworks include results . Texts always scored available framework -- just specifies return. Defaults , return scored frameworks. Can set receptiviti.frameworks option (e.g., options(receptiviti.frameworks = c(\"liwc\", \"sallee\"))). framework_prefix Logical; FALSE, remove framework prefix column names, may result duplicates. specified, 1 framework selected, as_list TRUE, default remove prefixes. as_list Logical; TRUE, returns list frameworks separate entries. bundle_size Number texts include request; 1 1,000. bundle_byte_limit Memory limit (bytes) bundle, 1e7 (10 MB, API's limit). May need lower API's limit, depending system's requesting library. collapse_lines Logical; TRUE, text contains paths files, file treated single text. retry_limit Maximum number times request can retried hitting rate limit. clear_cache Logical; TRUE, clear existing files cache. Use cache_overwrite want fresh results without clearing disabling cache. Use cache = FALSE disable cache. clear_scratch_cache Logical; FALSE, preserve bundles written in_memory TRUE, request made. request_cache Logical; FALSE, always make fresh request, rather using response previous identical request. cores Number CPU cores split bundles across, multiple bundles. See Parallelization section. use_future Logical; TRUE, uses future back-end process bundles, case, parallelization can controlled plan function (e.g., plan(\"multisession\") use multiple cores); required see progress bars using multiple cores. See Parallelization section. in_memory Logical; FALSE, write bundles temporary files, load requested. verbose Logical; TRUE, show status messages. overwrite Logical; TRUE, overwrite existing output file. compress Logical; TRUE, save xz-compressed file. make_request Logical; FALSE, request made. useful want sure load one caches, sure results exist ; error encounters texts source . text_as_paths Logical; TRUE, ensures text treated vector file paths. Otherwise, determined NAs text every entry 500 characters long. cache Path directory save unique results reuse; defaults Sys.getenv(\"RECEPTIVITI_CACHE\"). See Cache section details. cache_overwrite Logical; TRUE, write results cache without reading . used want fresh results cached without clearing cache. cache_format Format cache database; see FileFormat. Defaults Sys.getenv(\"RECEPTIVITI_CACHE_FORMAT\"). key API Key; defaults Sys.getenv(\"RECEPTIVITI_KEY\"). secret API Secret; defaults Sys.getenv(\"RECEPTIVITI_SECRET\"). url API URL; defaults Sys.getenv(\"RECEPTIVITI_URL\"), defaults \"https://api.receptiviti.com/\". version API version; defaults Sys.getenv(\"RECEPTIVITI_VERSION\"), defaults \"v1\". endpoint API endpoint (path name version); defaults Sys.getenv(\"RECEPTIVITI_ENDPOINT\"), defaults \"framework\". include_headers Logical; TRUE, receptiviti_status's verbose message include HTTP headers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/receptiviti.html","id":"value","dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Value","title":"Receptiviti API — receptiviti","text":"data.frame columns text (return_text TRUE; originally entered text), id (one provided), text_hash (MD5 hash text), column relevant entries api_args, scores included framework (e.g., summary.word_count liwc.). as_list TRUE, returns list named entry containing data.frame framework.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/receptiviti.html","id":"cache","dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Cache","title":"Receptiviti API — receptiviti","text":"cache argument specified, results unique texts saved Arrow database cache location (Sys.getenv(\"RECEPTIVITI_CACHE\")), retrieved subsequent requests. ensures exact texts re-sent API. , however, add processing time disc space usage. cache TRUE, default directory (receptiviti_cache) looked system's temporary directory (usually parent tempdir()). exist, asked created. primary cache checked bundle processed, existing results loaded time. processing many bundles parallel, many results cached, can cause system freeze potentially crash. avoid , limit number cores, disable parallel processing. cache_format arguments (RECEPTIVITI_CACHE_FORMAT environment variable) can used adjust format cache. can use cache independently open_database(Sys.getenv(\"RECEPTIVITI_CACHE\")). can also set clear_cache argument TRUE clear cache used , may useful cache gotten big, know new results returned. Even cached result exists, reprocessed variables new results, depends least 1 uncached result. , instance, add framework account want reprocess previously processed set texts, need first clear cache. Either way, duplicated texts within call sent . request_cache argument controls temporary cache bundle request. cleared R session ends. might want set FALSE new framework becomes available account want process set text already processed current R session without restarting. Another temporary cache made in_memory FALSE, default processing parallel (cores 1 use_future TRUE). contains file unique bundle, read needed parallel workers.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/receptiviti.html","id":"parallelization","dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Parallelization","title":"Receptiviti API — receptiviti","text":"texts split bundles based bundle_size argument. bundle represents single request API, limited 1000 texts total size 10 MB. one bundle either cores greater 1 use_future TRUE (externally specified plan), bundles processed multiple cores. texts spread across multiple files, can efficiently processed parallel file contains single text (potentially collapsed multiple lines). files contain multiple texts (.e., collapse_lines = FALSE), texts need read bundling order ensure bundles length limit. Whether processing serial parallel, progress bars can specified externally handlers; see examples.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/v/0.1.8/reference/receptiviti.html","id":"ref-examples","dir":"V > 0.1.8 > Reference","previous_headings":"","what":"Examples","title":"Receptiviti API — receptiviti","text":"","code":"if (FALSE) {  # check that the API is available, and your credentials work receptiviti_status()  # score a single text single <- receptiviti(\"a text to score\")  # score multiple texts, and write results to a file multi <- receptiviti(c(\"first text to score\", \"second text\"), \"filename.csv\")  # score many texts in separate files ## defaults to look for .txt files file_results <- receptiviti(dir = \"./path/to/txt_folder\")  ## could be .csv file_results <- receptiviti(   dir = \"./path/to/csv_folder\",   text_column = \"text\", file_type = \"csv\" )  # score many texts from a file, with a progress bar ## set up cores and progress bar (only necessary if you want the progress bar) future::plan(\"multisession\") progressr::handlers(global = TRUE) progressr::handlers(\"progress\")  ## make request results <- receptiviti(   \"./path/to/largefile.csv\",   text_column = \"text\", use_future = TRUE ) }"},{"path":[]},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"features-0-1-9","dir":"Changelog","previous_headings":"","what":"Features","title":"receptiviti 0.1.9","text":"Adds collect_results option large requests. Adds framework checking listing functionality. Adds custom norming context creation functionality. Adds support V2 API.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"improvements-0-1-9","dir":"Changelog","previous_headings":"","what":"Improvements","title":"receptiviti 0.1.9","text":"Improves cache performance. Adds support compressed files. Validates version endpoint arguments.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"bug-fixes-0-1-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"receptiviti 0.1.9","text":"Avoids failure total bundle failure. Avoids overwriting existing cache results within overlapping bins update.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-018","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.8","title":"receptiviti 0.1.8","text":"CRAN release: 2024-03-29","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"improvements-0-1-8","dir":"Changelog","previous_headings":"","what":"Improvements","title":"receptiviti 0.1.8","text":"Makes encoding detection reliable.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-017","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.7","title":"receptiviti 0.1.7","text":"CRAN release: 2024-02-23","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"improvements-0-1-7","dir":"Changelog","previous_headings":"","what":"Improvements","title":"receptiviti 0.1.7","text":"Suggests rather imports optional packages (arrow dplyr cache, future.apply use Future).","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-016","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.6","title":"receptiviti 0.1.6","text":"CRAN release: 2023-11-27","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"improvements-0-1-6","dir":"Changelog","previous_headings":"","what":"Improvements","title":"receptiviti 0.1.6","text":"Adds encoding argument; improves handling non-UTF-8 files.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"bug-fixes-0-1-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"receptiviti 0.1.6","text":"Fixes collapse_line reading files directory. Fixes version endpoint extraction URL.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-015","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.5","title":"receptiviti 0.1.5","text":"CRAN release: 2023-09-18","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"features-0-1-5","dir":"Changelog","previous_headings":"","what":"Features","title":"receptiviti 0.1.5","text":"Supports custom API versions endpoints.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"improvements-0-1-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"receptiviti 0.1.5","text":"Disables cache default. Adds files dir arguments clearer input. Returns file names IDs text_as_paths TRUE. Reworks text hashing improved cache handling.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"bug-fixes-0-1-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"receptiviti 0.1.5","text":"Avoids unnecessary cache rewrites. Fixes partial cache updating.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-014","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.4","title":"receptiviti 0.1.4","text":"CRAN release: 2023-05-05","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"features-0-1-4","dir":"Changelog","previous_headings":"","what":"Features","title":"receptiviti 0.1.4","text":"Supports additional API argument.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"improvements-0-1-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"receptiviti 0.1.4","text":"Standardizes option name format (receptiviti_frameworks changed receptiviti.frameworks). Makes request cache sensitive URL credentials, make easier make different requests text.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"bug-fixes-0-1-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"receptiviti 0.1.4","text":"Cleans cached malformed responses. Avoids unhandled body-size-related issue libcurl.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-013","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.3","title":"receptiviti 0.1.3","text":"CRAN release: 2022-12-13","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"improvements-0-1-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"receptiviti 0.1.3","text":"ID column can specified id, alternative id_column.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-012","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.2","title":"receptiviti 0.1.2","text":"CRAN release: 2022-10-06","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"bug-fixes-0-1-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"receptiviti 0.1.2","text":"Avoids establishing default cache non-interactive sessions.","code":""},{"path":"https://receptiviti.github.io/receptiviti-r/news/index.html","id":"receptiviti-010","dir":"Changelog","previous_headings":"","what":"receptiviti 0.1.0","title":"receptiviti 0.1.0","text":"CRAN release: 2022-09-14 First release.","code":""}]
